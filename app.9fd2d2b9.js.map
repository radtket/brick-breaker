{"version":3,"sources":["js/utils.js","js/Paddle.js","js/Ball.js","js/Brick.js","js/buildLevel.js","js/Game.js","app.js"],"names":["useBall","_ref","position","size","speed","x","y","sizeBall","bottomOfBall","leftSideOfBall","rightSideOfBall","topOfBall","ballSpeedX","ballSpeedY","useGame","_ref2","width","height","bottomOfObject","leftSideOfObject","rightSideOfObject","topOfObject","detectCollision","exports","ball","gameObject","_useBall","_useGame","console","log","detectCollisionPaddle","_useBall2","_useGame2","hitPosition","reset","_ref3","gameWidth","gameHeight","_utils","require","_typeof","o","Symbol","iterator","constructor","prototype","_classCallCheck","a","n","TypeError","_defineProperties","e","r","t","length","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","i","_toPrimitive","toPrimitive","call","String","Number","Paddle","maxSpeed","value","moveLeft","moveRight","stop","draw","ctx","drawImage","document","getElementById","update","_default","default","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","apply","_objectSpread","arguments","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","Ball","game","state","go","paddle","lives","Brick","str","markedForDeletion","_this","initUpdate","cord","concat","_Brick","_interopRequireDefault","__esModule","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","slice","name","Array","from","test","isArray","LEVELS_ARRAY","buildLevel","currentLevelNumber","reduce","bricks","row","rowIndex","all","brick","brickIndex","_Paddle","_Ball","_buildLevel","GAMESTATE","PAUSED","RUNNING","MENU","GAMEOVER","NEWLEVEL","YOUWIN","Game","gamestate","gameObjects","addEventListener","keyCode","togglePause","start","deltaTime","object","_this2","drawIt","id","rect","fillStyle","fill","font","textAlign","fillText","_Game","canvas","getContext","GAME_WIDTH","GAME_HEIGHT","lastTime","gameLoop","timestamp","clearRect","requestAnimationFrame"],"mappings":"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","file":"app.9fd2d2b9.js","sourceRoot":"../src","sourcesContent":["const useBall = ({ position, size, speed }) => {\n  const { x, y } = position;\n  return {\n    sizeBall: size,\n    bottomOfBall: y + size,\n    leftSideOfBall: x,\n    rightSideOfBall: x + size,\n    topOfBall: y,\n    ballSpeedX: speed.x,\n    ballSpeedY: speed.y,\n  };\n};\n\nconst useGame = ({ position, width, height }) => {\n  const { x, y } = position;\n  return {\n    bottomOfObject: y + height,\n    leftSideOfObject: x,\n    rightSideOfObject: x + width,\n    topOfObject: y,\n  };\n};\n\nexport const detectCollision = (ball, gameObject) => {\n  const {\n    bottomOfBall,\n    leftSideOfBall,\n    rightSideOfBall,\n    topOfBall,\n    ballSpeedX,\n    ballSpeedY,\n  } = useBall(ball);\n  const {\n    bottomOfObject,\n    leftSideOfObject,\n    rightSideOfObject,\n    topOfObject,\n  } = useGame(gameObject);\n\n  if (\n    bottomOfBall >= topOfObject &&\n    topOfBall <= bottomOfObject &&\n    rightSideOfBall >= leftSideOfObject &&\n    leftSideOfBall <= rightSideOfObject\n  ) {\n    if (\n      (ballSpeedX >= 0 &&\n        ballSpeedY < 0 &&\n        bottomOfObject - topOfBall < rightSideOfBall - leftSideOfObject) ||\n      (ballSpeedX <= 0 &&\n        ballSpeedY < 0 &&\n        bottomOfObject - topOfBall < rightSideOfObject - leftSideOfBall) ||\n      (ballSpeedX >= 0 &&\n        ballSpeedY > 0 &&\n        bottomOfBall - topOfObject < rightSideOfBall - leftSideOfObject) ||\n      (ballSpeedX <= 0 &&\n        ballSpeedY > 0 &&\n        bottomOfBall - topOfObject < rightSideOfObject - leftSideOfBall)\n    ) {\n      console.log(\"caso Y\");\n      return 1;\n    }\n    if (\n      (ballSpeedX > 0 &&\n        ballSpeedY <= 0 &&\n        bottomOfObject - topOfBall > rightSideOfBall - leftSideOfObject) ||\n      (ballSpeedX < 0 &&\n        ballSpeedY <= 0 &&\n        bottomOfObject - topOfBall > rightSideOfObject - leftSideOfBall) ||\n      (ballSpeedX > 0 &&\n        ballSpeedY >= 0 &&\n        bottomOfBall - topOfObject > rightSideOfBall - leftSideOfObject) ||\n      (ballSpeedX < 0 &&\n        ballSpeedY >= 0 &&\n        bottomOfBall - topOfObject > rightSideOfObject - leftSideOfBall)\n    ) {\n      console.log(\"caso X\");\n      return 2;\n    }\n  }\n\n  return false;\n};\n\nexport const detectCollisionPaddle = (ball, gameObject) => {\n  const { bottomOfBall, leftSideOfBall, sizeBall } = useBall(ball);\n  const { leftSideOfObject, rightSideOfObject, topOfObject } = useGame(\n    gameObject\n  );\n\n  let hitPosition = 0;\n\n  if (\n    bottomOfBall >= topOfObject &&\n    leftSideOfBall + sizeBall >= leftSideOfObject &&\n    leftSideOfBall <= rightSideOfObject\n  ) {\n    hitPosition = leftSideOfBall - leftSideOfObject;\n    if (hitPosition <= 20) {\n      return 1;\n    }\n    if (hitPosition > 20 && hitPosition <= 50) {\n      return 2;\n    }\n    if (hitPosition > 50 && hitPosition <= 75) {\n      return 3;\n    }\n    if (hitPosition > 75 && hitPosition <= 100) {\n      return 4;\n    }\n    if (hitPosition > 100 && hitPosition <= 130) {\n      return 5;\n    }\n    if (hitPosition >= 130) {\n      return 6;\n    }\n  }\n\n  return 0;\n};\n\nexport const reset = ({ gameWidth, gameHeight, width, height }) => {\n  console.log({ gameWidth, gameHeight, width, height });\n  return {\n    x: gameWidth / 2 - width / 2,\n    y: gameHeight - height - 10,\n  };\n};\n","import { reset } from \"./utils\";\n\nclass Paddle {\n  constructor({ gameWidth, gameHeight }) {\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n    this.width = 150;\n    this.height = 20;\n\n    this.maxSpeed = 10;\n    this.speed = 0;\n\n    this.reset();\n\n    this.position = reset({\n      gameWidth,\n      gameHeight,\n      width: this.width,\n      height: this.height,\n    });\n  }\n\n  reset() {\n    this.position = reset({\n      gameWidth: this.gameWidth,\n      gameHeight: this.gameHeight,\n      width: this.width,\n      height: this.height,\n    });\n  }\n\n  moveLeft() {\n    this.speed = -this.maxSpeed;\n  }\n\n  moveRight() {\n    this.speed = this.maxSpeed;\n  }\n\n  stop() {\n    this.speed = 0;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      document.getElementById(\"img_paddle\"),\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n\n  update() {\n    this.position.x += this.speed;\n    if (this.position.x < 0) {\n      this.position.x = 0;\n    }\n    if (this.position.x + this.width > this.gameWidth)\n      this.position.x = this.gameWidth - this.width;\n  }\n}\n\nexport default Paddle;\n","import { detectCollisionPaddle, reset } from \"./utils\";\n\nclass Ball {\n  constructor(game) {\n    this.game = game;\n    this.size = 16;\n    this.reset();\n    this.state = 0;\n  }\n\n  go() {\n    if (this.state === 1) {\n      return;\n    }\n    this.speed = { x: 5, y: -7 };\n    this.state = 1;\n  }\n\n  reset() {\n    this.position = reset({\n      ...this.game,\n      width: this.size,\n      height: this.size,\n    });\n    this.speed = { x: 0, y: 0 };\n    this.state = 0;\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      document.getElementById(\"img_ball\"),\n      this.position.x,\n      this.position.y,\n      this.size,\n      this.size\n    );\n  }\n\n  update() {\n    this.position.x += this.speed.x;\n    this.position.y += this.speed.y;\n\n    if (this.state === 0) {\n      this.position.x = this.game.paddle.position.x + 67;\n      this.position.y = this.game.paddle.position.y - 20;\n    } else {\n      // wall collision on left or right\n      if (\n        this.position.x > this.game.gameWidth - this.size ||\n        this.position.x < 0\n      ) {\n        this.speed.x = -this.speed.x;\n      }\n      // wall collision on top\n      if (this.position.y < 0) {\n        this.speed.y = -this.speed.y;\n      }\n\n      // bottom of game\n      if (this.position.y + this.size > this.game.gameHeight) {\n        this.game.lives -= 1;\n        this.reset();\n        this.game.paddle.reset();\n      }\n\n      switch (detectCollisionPaddle(this, this.game.paddle)) {\n        case 1:\n          this.speed.x = -9;\n          this.speed.y = -this.speed.y;\n          this.position.y = this.game.paddle.position.y - this.size;\n          break;\n        case 2:\n          if (this.speed.x < 0) {\n            this.speed.x = -6;\n          } else {\n            this.speed.x += -6;\n          }\n          this.speed.y = -this.speed.y;\n          this.position.y = this.game.paddle.position.y - this.size;\n          break;\n        case 3:\n          this.speed.y = -this.speed.y;\n          this.position.y = this.game.paddle.position.y - this.size;\n          break;\n        case 4:\n          this.speed.y = -this.speed.y;\n          this.position.y = this.game.paddle.position.y - this.size;\n          break;\n        case 5:\n          if (this.speed.x > 0) {\n            this.speed.x = 6;\n          } else {\n            this.speed.x += 6;\n          }\n          this.speed.y = -this.speed.y;\n          this.position.y = this.game.paddle.position.y - this.size;\n          break;\n        case 6:\n          this.speed.x = 9;\n          this.speed.y = -this.speed.y;\n          this.position.y = this.game.paddle.position.y - this.size;\n          break;\n        default:\n      }\n    }\n  }\n}\n\nexport default Ball;\n","import { detectCollision } from \"./utils\";\n\nclass Brick {\n  constructor(game, position, str) {\n    this.game = game;\n    this.position = position;\n    this.width = 80;\n    this.height = 24;\n    this.str = str;\n    this.markedForDeletion = false;\n  }\n\n  update() {\n    const initUpdate = cord => {\n      this.game.ball.speed[cord] = -this.game.ball.speed[cord];\n      if (this.str <= 1) {\n        this.markedForDeletion = true;\n      } else {\n        this.str -= 1;\n      }\n    };\n\n    switch (detectCollision(this.game.ball, this)) {\n      case 1:\n        initUpdate(\"y\");\n        break;\n      case 2:\n        initUpdate(\"x\");\n        break;\n      default:\n    }\n  }\n\n  draw(ctx) {\n    ctx.drawImage(\n      document.getElementById(`img_brick${this.str}`),\n      this.position.x,\n      this.position.y,\n      this.width,\n      this.height\n    );\n  }\n}\n\nexport default Brick;\n","import Brick from \"./Brick\";\n\nconst LEVELS_ARRAY = [\n  [\n    [3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n    [3, 3, 3, 3, 3, 3, 3, 3, 3, 3],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2],\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n  ],\n  [\n    [3, 0, 0, 2, 2, 2, 2, 0, 0, 3],\n    [1, 3, 0, 0, 2, 2, 0, 0, 3, 1],\n    [1, 1, 3, 0, 0, 0, 0, 3, 1, 1],\n    [1, 1, 1, 3, 0, 0, 3, 1, 1, 1],\n    [1, 1, 1, 3, 0, 0, 3, 1, 1, 1],\n    [1, 1, 1, 3, 0, 0, 3, 1, 1, 1],\n    [1, 1, 3, 0, 0, 0, 0, 3, 1, 1],\n    [1, 3, 0, 0, 2, 2, 0, 0, 3, 1],\n    [3, 0, 0, 2, 2, 2, 2, 0, 0, 3],\n  ],\n];\n\nexport const buildLevel = (game, currentLevelNumber) =>\n  LEVELS_ARRAY[currentLevelNumber].reduce(\n    (bricks, row, rowIndex) =>\n      row.reduce(\n        (all, brick, brickIndex) => [\n          ...all,\n          new Brick(\n            game,\n            {\n              x: 80 * brickIndex,\n              y: 75 + 24 * rowIndex,\n            },\n            brick\n          ),\n        ],\n        bricks\n      ),\n    []\n  );\n","import Paddle from \"./Paddle\";\nimport Ball from \"./Ball\";\n\nimport { buildLevel } from \"./buildLevel\";\n\nconst GAMESTATE = {\n  PAUSED: 0,\n  RUNNING: 1,\n  MENU: 2,\n  GAMEOVER: 3,\n  NEWLEVEL: 4,\n  YOUWIN: 5,\n};\n\nconst { PAUSED, RUNNING, MENU, GAMEOVER, NEWLEVEL, YOUWIN } = GAMESTATE;\n\nclass Game {\n  constructor(gameWidth, gameHeight) {\n    this.gameWidth = gameWidth;\n    this.gameHeight = gameHeight;\n    this.gamestate = MENU;\n    this.paddle = new Paddle(this);\n    this.ball = new Ball(this);\n    this.gameObjects = [];\n    this.bricks = [];\n    this.lives = 4;\n\n    this.currentLevelNumber = 0;\n\n    document.addEventListener(\"keydown\", ({ keyCode }) => {\n      switch (keyCode) {\n        case 37:\n          this.paddle.moveLeft();\n          break;\n\n        case 39:\n          this.paddle.moveRight();\n          break;\n\n        case 32:\n          this.ball.go();\n          break;\n\n        case 13:\n          this.togglePause();\n          this.start();\n          break;\n        default:\n      }\n    });\n\n    document.addEventListener(\"keyup\", ({ keyCode }) => {\n      switch (keyCode) {\n        case 37:\n          if (this.paddle.speed < 0) {\n            this.paddle.stop();\n          }\n          break;\n\n        case 39:\n          if (this.paddle.speed > 0) {\n            this.paddle.stop();\n          }\n          break;\n        default:\n      }\n    });\n  }\n\n  start() {\n    if (this.gamestate !== MENU && this.gamestate !== NEWLEVEL) {\n      return;\n    }\n\n    this.bricks = buildLevel(this, this.currentLevelNumber);\n    this.ball.reset();\n    this.gameObjects = [this.ball, this.paddle];\n\n    this.gamestate = RUNNING;\n  }\n\n  update(deltaTime) {\n    if (this.lives === 0) {\n      this.gamestate = GAMEOVER;\n    }\n\n    if (\n      this.gamestate === PAUSED ||\n      this.gamestate === MENU ||\n      this.gamestate === GAMEOVER\n    )\n      return;\n\n    if (this.bricks.length === 0) {\n      this.currentLevelNumber += 1;\n      if (this.currentLevelNumber > 1) {\n        this.gamestate = YOUWIN;\n      } else {\n        this.gamestate = NEWLEVEL;\n        this.start();\n      }\n    }\n\n    [...this.gameObjects, ...this.bricks].forEach(object =>\n      object.update(deltaTime)\n    );\n\n    this.bricks = this.bricks.filter(brick => !brick.markedForDeletion);\n  }\n\n  draw(ctx) {\n    const drawIt = id => {\n      ctx.drawImage(\n        document.getElementById(id),\n        0,\n        0,\n        this.gameWidth,\n        this.gameHeight\n      );\n    };\n\n    drawIt(\"img_bg\");\n    ctx.drawImage(document.getElementById(\"img_lives\"), 0, 0, 100, 50);\n\n    for (let i = 2; i <= this.lives; i += 1) {\n      ctx.drawImage(\n        document.getElementById(\"img_ball\"),\n        i * 20 + 60,\n        17,\n        16,\n        16\n      );\n    }\n\n    [...this.gameObjects, ...this.bricks].forEach(brick => brick.draw(ctx));\n\n    if (this.gamestate === PAUSED) {\n      ctx.rect(0, 0, this.gameWidth, this.gameHeight);\n      ctx.fillStyle = \"rgba(0,0,0,0.5)\";\n      ctx.fill();\n\n      ctx.font = \"30px Arial\";\n      ctx.fillStyle = \"white\";\n      ctx.textAlign = \"center\";\n      ctx.fillText(\"Paused\", this.gameWidth / 2, this.gameHeight / 2);\n    }\n\n    if (this.gamestate === MENU) {\n      drawIt(\"img_bgmenu\");\n    }\n\n    if (this.gamestate === GAMEOVER) {\n      drawIt(\"img_gameover\");\n    }\n\n    if (this.gamestate === YOUWIN) {\n      drawIt(\"img_youwin\");\n    }\n  }\n\n  togglePause() {\n    if (this.gamestate === MENU) {\n      return;\n    }\n\n    this.gamestate = this.gamestate === PAUSED ? RUNNING : PAUSED;\n  }\n}\n\nexport default Game;\n","import Game from \"./js/Game\";\n\nconst canvas = document.getElementById(\"gameScreen\");\nconst ctx = canvas.getContext(\"2d\");\n\nconst GAME_WIDTH = 800;\nconst GAME_HEIGHT = 600;\n\nconst game = new Game(GAME_WIDTH, GAME_HEIGHT);\n\nlet lastTime = 0;\n\nfunction gameLoop(timestamp) {\n  const deltaTime = timestamp - lastTime;\n  lastTime = timestamp;\n\n  ctx.clearRect(0, 0, GAME_WIDTH, GAME_HEIGHT);\n  game.update(deltaTime);\n  game.draw(ctx);\n\n  requestAnimationFrame(gameLoop);\n}\n\nrequestAnimationFrame(gameLoop);\n"]}